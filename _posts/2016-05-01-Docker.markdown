---
layout: post
title:  "Docker - 1"
date:   2016-05-01 18:45:00
summary: Docker Getting Started
categories: Docker
---

다시 한 번 SDN을 건드려볼려고 한다. 일단 첫 번째로, 그러기 위해선 mininet을 이용하여 topology를 구성해야하는데 맥북 환경에서는 mininet의 구동이 불가능하다. 그렇다고 집에 있는 레노버 노트북에 접속하면서 하는 건 약간 무리가 있을 것 같았다. 

### Docker란?

Docker는 가상 머신과 비슷하다고 생각하면 된다. 가상 머신에 MySQL와 Apache 그리고 개발한 Application을 설치한 후 실행할 수 있는데 이것을 이미지로 묶어버릴 수가 있다. 이 이미지를 이용하여 여러 서버에 복사하여 실행하면 이미지 하나로 동일한 서버 여러 대를 생산해낼 수 있다.

이렇게 편리한 가상 머신에도 단점은 분명히 존재한다. 그것은 **성능** 이슈이다. 사실 가상 머신이기 때문에 실제 머신보다 느린 것은 어쩔 수 없다. 그리고 또한 Guest OS를 설치해야하기 때문에 당연히 이미지의 크기 또한 커질 수밖에 없었다.

Docker는 가상 머신에 비해 크게 경량화가 되었는데 가상 머신과 다르게 Guest OS를 설치하지 않는다. Docker 이미지에 서버 운영에 필요한 것들만 설치할 수 있을 뿐만 아니라 OS 자원은 Host OS와 공유한다. 

 Docker는 lxc(Linux Container) 드라이버 기반으로 동작했지만 0.9x 버전부터는 libcontainer를 사용한다고 한다.
 
 	기억하기로는 lxc에 치명적인 보안 이슈가 있다고 들었는데 잘은 모르겠다.
 	
 리눅스는 OS 레벨에서 가상화를 제공한다. OS 자체를 가상화하는 것이 아닌 커널 레벨에서 제공해준다. 그래서 결과적으로 OS가 설치되지 않으므로 가상 머신이 아닌 컨테이너라고 부른다.
 
Docker는 이러한 리눅스 컨테이너를 기반으로 하여 이미지 관리 및 배포를 하게 해준다. 게다가 git 처럼 commit하고 push도 하게 해준다.

### Docker 시작하기

Docker의 설치는 공식 사이트의 문서를 보면 된다! 그러므로 Ubuntu와 mininet을 설치하는 것을 진행해본다.

다음과 같은 명령어를 쳐야한다

	docker run -i -t --name contaner_name ubuntu:14.04 /bin/bash
	
실행하면 로컬에서 ubuntu 이미지를 찾는다. 없으면 이미지를 pull 한다.

1. -i : Interactive
2. -t : pseudo-tty
3. --name : 컨테이너의 이름이다. 나의 경우 mininet으로 하였다.

pull하여 설치 후 ubuntu가 실행된다. 아무것도 설치가 안되어있기 때문에 설치를 해줘야한다.

	apt-get update 
	apt-get install -y git net-tools sudo
	git clone git://github.com/mininet/mininet
	cd mininet
	git checkout -b 2.2.1 2.2.1
	git pull origin master
	sudo ./util/install.sh -a
	
이러면 sudo와 git, net-tools 그리고 mininet이 설치된다.

	sudo mn --switch --test pingall
	
을 실행하면 성공적으로 실행되는 것을 알 수 있다.
	
