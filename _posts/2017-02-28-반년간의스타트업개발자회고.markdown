---
layout: post
title:  "반 년간의 스타트업 개발자 회고"
date:   2017-02-28
---

### 0. 글을 작성하며 

벌써 한 해가 지나고 벌써 2017년이 다가왔다. 본인에게도 큰 변화가 찾아왔다.

2016년 7월부터 출근한, 정든 회사를 2017년 2월 7일을 기점으로 퇴사하게 되었다. 정 들었던 회사를 퇴사하며, 왜 퇴사를 했으며, 어떤 것을 고려하였고, 무엇을 배웠는지에 대하여 개발자 입장에서 회고해보도록 하기로 마음을 먹었다.

> 마음을 먹었지만 미루고 미루다 보니 드디어 2월 27일에 글 작성을 시작하였다. (...)

### 1. 스타트업을 다니며 느낀 것은? 

이 장에서는 내가 스타트업을 다니면서 느낀 여러 가지를 회고해보도록 한다.

##### 1.0. 각 팀간의 커뮤니케이션

커뮤니케이션의 부재가 어떤 상황을 불러일으킬 수 있는지에 깨닫는 계기가 되었다. 입사 당시, 회사는 1년이 넘지 않은 스타트업이었다. 그렇기 때문에 기본적인 소통 채널이 제대로 구축되어있지 않았고, 이는 **각 팀이 무슨 일을 하고 있으며, 어떠한 어려움을 겪고 있는지**에 대하여 제대로 공유가 되지 않는 상황을 발생시켰다. 

굉장히 단순한 문제인 것 같지만 이로 인하여 이러한 일이 발생할 수 있다.

1. 일정 추산의 문제

   프로젝트가 하나의 팀만 국한되어있다면 문제가 되지 않지만, 타 팀과 진행하는 것이라면 이야기는 달라진다. 서로가 어떠한 일정을 가지고 있는지 등에 대하여 제대로 공유가 되지 않는다면 **일정 추산의 문제가 생길 수 있다.**

대표적으로는 위에 언급한 것과 같으며 **이외의 다양한 문제는 각 회사마다 존재할 수 있다.**

이를 해결하기 위해서는 다음과 같은 해결책이 존재한다고 생각한다.

1. 이메일의 습관화

   Google Works 를 사용하여 각 팀마다 이메일을 생성하고, **최소 주간 단위로 팀의 상태를 전사적으로 공유하는 것이다.** 또한 이는 기록물로 남는다.

2. Slack

   지금에서야 Slack의 장점을 보게 되었는데, 이는 private channel 이 아니라면 **자유롭게 channel 에 들어가서 각 팀의 대화 내용을 볼 수 있다는 것이었다.** 이를 통해, 평소에 각 팀의 급변하는 상황에 대하여 미리 알 수 있다.

   > 사내 메신저로 카카오톡을 사용하는 회사는 입사를 하지 말라. 결론은 Slack 씁시다.

##### 1.1. 사수가 존재하지 않을 확률이 높다.

이게 가장 큰 문제인 것 같다. 나는 이것을 이유로 **커리어의 시작점을 스타트업으로 시작하지 않길 권한다.**

> 물론, 나는 후회하지 않는다. 

많은 스타트업에서 재정 또는 여러 가지 복잡한 이유로 인하여 CTO 가 없는 경우가 많다. 개발자가 만능이 아니다. 때로는 사수의 도움을 받아야할 때가 있다. 요즈음의 스타트업들을 보면 병원에 비유해보면 이제 막 의대 졸업한 학생에게 중요한 수술을 맡기는 것 같은 느낌이다.

사수가 없다면 다음과 같은 문제가 발생한다.

1. 개발 팀엔 **개발 경험이 다소 부족**하다.

   1. 스타트업에서 어느 팀이건 비즈니스와 관련될 가능성이 농후하다. 예를 들어, 사용자의 결제를 위해서 결제 서버를 빠르면서도 안정성이 보장되게 구축해아하는데 개발 경험이 부족하다면 이는 낭패라고 본다.

      > 나는 부족한 경험의 상태에서 결제 서버를 구축했었다. 물론 덕분에 배운 게 많다.

2. 개발 기술의 대한 **보수적인 관점**에서 보기가 어렵다.

   1. 개발자도 사람이기에 트렌드에 쉽게 휘말리기도 한다. 회사에서 개발 팀은 **신기술에 대한 보수적 관점에서의 평가**가 다소 부족했었다고 생각한다. 이는 일정이 정해진 프로젝트에서 치명적일 수도, 혹은 신의 한 수가 될 수도 있다. 신기술에 대한 러닝 커브로 인하여 생산성이 비약적인 향상을 보일 수도, 메이저 버전이 아닌 신기술의 도입으로 인하여 안정성의 문제가 나타날 수도 있다.

      > 1. 실제로, 신기술 도입으로 인하여 개발 일정이 미루어진 적이 있었다.
      > 2. 언급했듯이, 양날의 검이다. 꼭 나쁜 것은 아니다. 신기술을 주도적으로 쓸 수 있는 기회는 스타트업이 최고다.

3. 상세한 코드 리뷰가 어렵다.

   1. 사수의 존재로 인하여 신입 개발자가 얻을 수 있는 메리트는 다름 아닌 **본인 코드 퀄리티의 향상**이다. 언제까지 대학교에서 배우던 코드 퀄리티로 살 수는 없지 않은가.

##### 1.2. 빠른 프로토타이핑과 개선도 중요하지만 기반이 문제야! 멍청아! (빌 클린턴의 "문제는 경제야 멍청아"를 패러디 읍...)

스타트업을 소개할 때 항상 나오는 키워드가 두 가지 있다고 생각한다. 그것은 바로 **빠른 프로토타이핑, 그리고 개선**이다. 이것이 절대 나쁘다고 말하고자 하는 것이 아니다. 다만, 이것도 기반 작업이 철저히 잘 되어있을 때, 진정한 효과가 발휘된다고 생각한다.

다음의 대표적인 사례에 대하여 이야기해보자.

1. 새로 입사한 A 개발자는 안드로이드 클라이언트 작업을 인수인계받아 작업을 진행하기로 하였다. 그런데 문서화가 제대로 되어있지 않다면 ?

   => **JavaDoc이나, Spring Boot이라면 Swagger를 이용하여 문서화**를 간편하게 할 수도 있었을 것 같다.

2. A 개발자는 타 팀의 요청으로 인하여 데이터베이스에 직접 접근해야하는 일이 발생하였다. 하지만, 이제 새로 들어왔기 때문에 데이터베이스 구조에 대하여 알지 못한다면 ?

   => **MySQLWorkBench 에서 ERD 만이라도 뽑아서 가이드를 해주면 되지 않았을까 ?**

3. 여러 개발자의 손을 거친 코드, 그 코드의 스타일은 일정하지 않았다. 그렇다면 어떻게 해야할까?

   => lint를 통과하지 못하면 **아예 커밋조차 못하게 막아놓으면 된다.**

   > lint 가 은근 어렵지만, 해놓으면 좋다는 것을 나중에야 깨닫는… 다...

내가 제시한 해결책은 사실 굉장히 간단한 것들이다. 코드를 작성하면서 조금씩 문서화를 하면 되었고, 가이드를 작성해두면 되는 것이었다. **나는 이런 것이 쌓이는 것이 기반이라고 생각하며 이 기반이 생산성을 높여줄 수 있다고 믿고 있다.** 그럼에도 불구하고 나는 **왜 이런 작업을 하지 못했을까?** 에 대하여 고민해보았다.

내가 내린 결론은 일정 추산에 대한 실패로 인하여 다급한 일정이 이러한 기반 작업을 하지 못하는 상황을 초래했다고 생각하며 이는 1.1에서 이야기한 것과 일맥상통한다고 생각한다.

### 2. 왜 퇴사를 하였는가?

사실 입사와 동시에 나는 퇴사를 어느정도 생각하고 있었다. 왜냐 하면, 난 대학 졸업 예정자도 아닌 재학 중이었으며 학년도 2017년을 기점으로 2학년으로 올라가는 당시로서는 새내기였다. (…) 당연히, 학교 또한 고려해야했다.

하지만 추상적으로만 생각했었고 본격적으로 퇴사를 생각하게된 계기는 10월 말에 아는 동생과 일본 후쿠오카에 2박 3일 일정으로 여행을 다녀온 것이었다. 

당시, 조금 힘들었다. 회사의 새로운 서비스를 매우 급박한 일정에 문서화도 안된 레거시 코드를 인수인계받아서 진행해야했기 때문이다. **더불어, 나이 30 쯔음이 되던 한 명의 개발자가 역대급 꼰대짓을 하는 바람에 무슨 이야기만 해도 한숨만 나왔었다.**

> 군대 부심부리는 사람은 사회에 은근히 많다는 걸 깨달았고, 이 일은 인성 수련한다는 셈 치고 있다...

그래서 도저히 버틸 수가 없어서 여행을 갔는데, **"내가 굳이 회사를 다녀야할까?"**라는 근본적인 질문을 스스로에게 하기 시작했다. 그리고 주변에서 여러 가지 조언을 해주면서 **"역시 공부가 제일 좋은 것이었군!"**을 깨달아가기 시작하였다.

그리고 다시 한 번 1월에 8박 9일 일정으로 일본 간사이 지방을 도는 여행을 하였고 이 때 퇴사에 대한 결심을 했던 것 같다. 

> 결심을 했지만, 조금 미루다가 좀 늦게 이야기했다...

간사이 지방을 돌면서, 외국인 개발자랑 우연히 커피 한 잔도 하며 느낀 것은 세상은 너무 넓다는 것이다. 근데 이 넓은 세상을 살기 위해서는 갖추어야할 것들이 한 두 가지가 아니더라. 이 세상을 살아나가려면 **뭘 해야할까?** 를 곰곰히 생각해보았다.

내가 내린 결론은, **단순히, 다양하게 부딪히고 배우는 것**이다. 

그래서 나는 그 시작 지점으로 대학교에서 공부를 열심히 해보기로 했다. 뭐 기본 지식은 있어야 하지 않겠나! 하하핫!

> 1. 직접 부딪히며 **다음에 스타트업으로 취직하면 어떤 것을 고려해보아야하는가?** 에 대한 기준을 세울 수 있었다.
> 2. 그런데, 국세청에서 거액을 일시불로 납부하라고 전자고지서를 날려버렸다. (…) 

### 3. 스타트업은 어떤 의미로 다가올 수 있을까?

처음 접하는 분들이 보기엔 낭만적일 것 같다. 높은 자유도, 창의성을 권장하고 등등 (...)

그런데 그렇지 않다. 스타트업은 언제든 안 좋은 상황이 닥칠 가능성을 내포하고 있는 지점에 놓여있다. 또한, 내부적으로는 치열하며 스스로 성장해야하는 숙제가 주어진다. 아무도 당신을 챙겨주지 못하는 상황이 발생할 수도 있다. 1장에서 언급한 문제 또한 존재할 수 있다.

그렇다면 **risk-taking 을 해야한다는 것인데 이는 과연 신입 개발자에게 좋은 상황일까? 나는 아니라고 본다.** 적어도 **risk-taking 을 할만한 가치를 찾지 못할 것 같다면, 좀 더 진지하게 재고한 후 결정해야하지 않을까?** 싶다.

다행히, 내가 다녔던 플레이팅이란 곳은 좋은 회사였다. 다양한 신기술을 접할 수 있었고, 실력 향상 또한 도모할 수 있었다. 대기업과의 제휴를 통하여 관련 개발과 소통했던 시간 또한 귀중하였다. (물론, 그 당시엔… 부들부들...)

난 운이 좋은 케이스라고 생각한다. 회사를 다니면서, 기술 뿐만 아니라 비즈니스적인 모델에 관해서도 깊게 생각해볼 수 있는 좋은 기회였다.

### 4. 글을 마치며

글을 제대로 정리하여 작성하고자 했지만, 7개월 간의 기억들이 너무 많기에 다소 어지러운 것 같습니다.

다양하고 소중한 경험을 얻을 수 있었던 이 회사를 소개해주신 국민대학교 이민석 교수님 그리고 인턴십과 정규직에 채용해주신 플레이팅에 진심으로 감사합니다. 